/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations, useTexture } from "@react-three/drei";
import { useThree } from "@react-three/fiber";
import { useAtom } from "jotai";
import { dialogAtom, userAtom, socket } from "./SocketManager";
import { useGrid } from "../hooks/useGrid";
import { Vector3 } from "three";

export default function MainChar({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/models/MainChar.glb");
  const [_dialog, setDialog] = useAtom(dialogAtom);
  const { vector3ToGrid } = useGrid();
  const [user] = useAtom(userAtom);

  const scene = useThree((state) => state.scene);

  const texture = useTexture({
    colorMap: `/models/textures/main/Boy_BaseColor.png`,
    roughtnessMap: `/models/textures/main/Boy_Roughtness.png`,
  });
  texture.colorMap.flipY = false;
  const { actions } = useAnimations(animations, group);

  const [animation, setAnimation] = useState("typing");

  useEffect(() => {
    actions[animation].reset().fadeIn(0.32).play();
    return () => actions[animation]?.fadeOut(0.32);
  }, [animation, actions]);

  const handleClick = (e) => {
    const character = scene.getObjectByName(`character-${user}`);
    const vec = new Vector3();
    vec.set(16, 0, 16);
    socket.emit("move", vector3ToGrid(character.position), vector3ToGrid(vec));

    e.stopPropagation();
    animation === "typing" ? setAnimation("Talking") : setAnimation("typing");
    setDialog({
      active: true,
      text: ["Hello, I'm the main character", "and I'm here to help you"],
      char: "Benjamin",
    });
  };

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      onClick={(e) => {
        handleClick(e);
      }}
      position={[24, 0, 24]}
      rotation-y={Math.PI / 4}
    >
      <group name="Scene">
        <group
          name="Base_HumanLPlatform"
          position={[0.07, 0, 0.01]}
          rotation={[-Math.PI, 0, -Math.PI / 2]}
          scale={0.01}
        />
        <group
          name="Base_HumanRPlatform"
          position={[-0.07, 0, 0.01]}
          rotation={[-Math.PI, 0, -Math.PI / 2]}
          scale={0.01}
        />
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.Base_Human} />
          <primitive object={nodes.Base_HumanPelvis} />
          <skinnedMesh
            name="Boy"
            geometry={nodes.Boy.geometry}
            skeleton={nodes.Boy.skeleton}
            castShadow
          >
            <meshStandardMaterial
              attach="material"
              map={texture.colorMap}
              roughness={texture.roughtnessMap}
            />
          </skinnedMesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/MainChar.glb");
